#!/usr/bin/env pwsh
$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent

$exe=""
$pathsep=":"
$env_node_path=$env:NODE_PATH
$new_node_path="D:\website-opd-frontend\node_modules\.pnpm\@nuxt+devtools@2.5.0_vite@6.3.5_@types+node@24.0.0_jiti@2.4.2_sass-embedded@1.89.2_terser@5.4_gn7y4dzfmpiwkyxthv3hu732w4\node_modules\@nuxt\devtools\node_modules;D:\website-opd-frontend\node_modules\.pnpm\@nuxt+devtools@2.5.0_vite@6.3.5_@types+node@24.0.0_jiti@2.4.2_sass-embedded@1.89.2_terser@5.4_gn7y4dzfmpiwkyxthv3hu732w4\node_modules\@nuxt\node_modules;D:\website-opd-frontend\node_modules\.pnpm\@nuxt+devtools@2.5.0_vite@6.3.5_@types+node@24.0.0_jiti@2.4.2_sass-embedded@1.89.2_terser@5.4_gn7y4dzfmpiwkyxthv3hu732w4\node_modules;D:\website-opd-frontend\node_modules\.pnpm\node_modules"
if ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {
  # Fix case when both the Windows and Linux builds of Node
  # are installed in the same directory
  $exe=".exe"
  $pathsep=";"
} else {
  $new_node_path="/mnt/d/website-opd-frontend/node_modules/.pnpm/@nuxt+devtools@2.5.0_vite@6.3.5_@types+node@24.0.0_jiti@2.4.2_sass-embedded@1.89.2_terser@5.4_gn7y4dzfmpiwkyxthv3hu732w4/node_modules/@nuxt/devtools/node_modules:/mnt/d/website-opd-frontend/node_modules/.pnpm/@nuxt+devtools@2.5.0_vite@6.3.5_@types+node@24.0.0_jiti@2.4.2_sass-embedded@1.89.2_terser@5.4_gn7y4dzfmpiwkyxthv3hu732w4/node_modules/@nuxt/node_modules:/mnt/d/website-opd-frontend/node_modules/.pnpm/@nuxt+devtools@2.5.0_vite@6.3.5_@types+node@24.0.0_jiti@2.4.2_sass-embedded@1.89.2_terser@5.4_gn7y4dzfmpiwkyxthv3hu732w4/node_modules:/mnt/d/website-opd-frontend/node_modules/.pnpm/node_modules"
}
if ([string]::IsNullOrEmpty($env_node_path)) {
  $env:NODE_PATH=$new_node_path
} else {
  $env:NODE_PATH="$new_node_path$pathsep$env_node_path"
}

$ret=0
if (Test-Path "$basedir/node$exe") {
  # Support pipeline input
  if ($MyInvocation.ExpectingInput) {
    $input | & "$basedir/node$exe"  "$basedir/../@nuxt/devtools/cli.mjs" $args
  } else {
    & "$basedir/node$exe"  "$basedir/../@nuxt/devtools/cli.mjs" $args
  }
  $ret=$LASTEXITCODE
} else {
  # Support pipeline input
  if ($MyInvocation.ExpectingInput) {
    $input | & "node$exe"  "$basedir/../@nuxt/devtools/cli.mjs" $args
  } else {
    & "node$exe"  "$basedir/../@nuxt/devtools/cli.mjs" $args
  }
  $ret=$LASTEXITCODE
}
$env:NODE_PATH=$env_node_path
exit $ret
